<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:Application_E2A.Projects" >

    <ResourceDictionary.MergedDictionaries>
        <!-- Order is important -->
        <ResourceDictionary Source="pack://application:,,,/Application_E2A;component/Resources/StyleDictionaries/Style_Colors.xaml" />
        <ResourceDictionary Source="pack://application:,,,/Application_E2A;component/Resources/StyleDictionaries/Style_Fonts.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <!--...................................TEXTBLOCK...................................-->

    <!--this on eshould be gradually removed-->
    <Style x:Key ="TreeViewBodyText" TargetType="TextBlock">
        <Style.Triggers>
            <DataTrigger Binding="{Binding Issued}" Value="true">
                <Setter Property="Foreground" Value="Gray" />
                <Setter Property="FontSize" Value="12" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <!--BASE-->
    <Style x:Key ="BaseTextBlockStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="FontSize" Value="12" />
        <!--
        <Setter Property="LineStackingStrategy" Value="BlockLineHeight"/>
        <Setter Property="LineHeight" Value="20"/>
        -->
    </Style>

    <!--WINDOW-->
    <Style TargetType="{x:Type TextBlock}" x:Key="HeaderText" BasedOn="{StaticResource BaseTextBlockStyle}">
        <Setter Property="Foreground" Value="{StaticResource ForegroundMainBrush}" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="Margin" Value="0 6" />
    </Style>

    <Style TargetType="{x:Type TextBlock}" x:Key="FooterText" BasedOn="{StaticResource BaseTextBlockStyle}">
        <Setter Property="Foreground" Value="{StaticResource ForegroundMainBrushLight}" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="Margin" Value="0 6" />
        <Setter Property="FontSize" Value="12"/>
    </Style>

    <Style TargetType="{x:Type TextBlock}" x:Key="WindowButtonsText" BasedOn="{StaticResource BaseTextBlockStyle}">
        <Setter Property="Foreground" Value="{StaticResource ForegroundMainBrushLight}"/>
        <Setter Property="FontSize" Value="10"/>
    </Style>

    <!--DOCKPANEL-->
    <Style TargetType="{x:Type TextBlock}" x:Key="Dockpanel_HeaderText" BasedOn="{StaticResource HeaderText}">
        <Setter Property="Foreground" Value="{StaticResource ForegroundMainBrushLight}" />
        <Setter Property="FontSize" Value="20"/>
    </Style>

    <!-- PAGINATION-->
    <Style x:Key ="Paginator_HeaderMainTextStyle" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="Georgia"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="FontWeight" Value="Heavy"/>
    </Style>

    <Style x:Key ="Paginator_HeaderStampBoldStyle" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="Open Sans"/>
        <Setter Property="FontSize" Value="8"/>
        <Setter Property="FontWeight" Value="Heavy"/>
    </Style>

    <Style x:Key ="Paginator_HeaderStampLightStyle" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="Open Sans"/>
        <Setter Property="FontSize" Value="8"/>
        <Setter Property="FontWeight" Value="Light"/>
    </Style>

    <Style x:Key ="Paginator_HeaderContentTextStyle" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="Georgia"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="FontWeight" Value="Heavy"/>
    </Style>

    <Style x:Key ="Paginator_ContentTextStyle" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="Georgia"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="FontWeight" Value="Light"/>
        <!--
        <Setter Property="LineStackingStrategy" Value="BlockLineHeight"/>
        <Setter Property="LineHeight" Value="12"/>
        -->
    </Style>

    <!--PENDING-->
    <Style x:Key ="Pending_TextBlock_Content" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource BaseTextBlockStyle}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsPending, Mode=TwoWay}" Value="False">
                <Setter Property="Foreground" Value="LightGray" />
            </DataTrigger>
            <DataTrigger Binding="{Binding IsOverdue}" Value="True">
                <Setter Property="Foreground" Value="Red" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <!--MATERIALIZATION-->
    <Style x:Key="Material_TextBlockHeader" TargetType="{x:Type TextBlock}">
        <Setter Property="Foreground" Value="LightGray"/>
        <Setter Property="FontSize" Value="8"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
    </Style>
    <Style x:Key="Material_TextBlockContent" TargetType="{x:Type TextBlock}">
        <Setter Property="Margin" Value="10 2 10 2"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="MinWidth" Value="100"/>
        <Setter Property="MaxWidth" Value="250"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
    </Style>
    <Style x:Key="Material_TextBlockContentDisabled" TargetType="{x:Type TextBlock}">
        <Setter Property="Margin" Value="10 2 10 2"/>
        <Setter Property="Foreground" Value="Gray"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="MinWidth" Value="50"/>
        <Setter Property="MaxWidth" Value="250"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
    </Style>

    <!--ROOM-->
    <Style x:Key="Room_TextBlockContent" TargetType="{x:Type TextBlock}">
        <Setter Property="Margin" Value="10 2 10 2"/>
        <Setter Property="MinWidth" Value="50"/>
        <Setter Property="MaxWidth" Value="250"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsSelected, Mode=OneWay}" Value="False">
                <Setter Property="Foreground" Value="Black" />
                <Setter Property="FontWeight" Value="Light" />
            </DataTrigger>
            <DataTrigger Binding="{Binding IsSelected, Mode=OneWay}" Value="True">
                <Setter Property="Foreground" Value="OrangeRed" />
                <Setter Property="FontWeight" Value="Bold" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <!--REVISIONS-->
    <Style x:Key ="WindowButtonsText_Revisions" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource WindowButtonsText}">
        <Setter Property="Foreground" Value="Red" />
        <Setter Property="FontWeight" Value="Bold" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding NumberOfIncorrectRevisions}" Value="0">
                <Setter Property="Foreground" Value="LightGray" />
                <Setter Property="FontWeight" Value="Normal" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="Revisions_TextBlockContent" TargetType="{x:Type TextBlock}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding HasErrors}" Value="True">
                <Setter Property="Foreground" Value="Red" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <!--...................................TEXTBOX...................................-->
    
    <!--BASE-->
    <Style x:Key ="BaseTextBoxStyle" TargetType="{x:Type TextBox}">
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="MinWidth" Value="20"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border Name="Bd" BorderThickness="{TemplateBinding BorderThickness}" 
                                             BorderBrush="{TemplateBinding BorderBrush}" 
                                             Background="{TemplateBinding Background}" 
                                             SnapsToDevicePixels="true">
                        <ScrollViewer Name="PART_ContentHost" Background="{TemplateBinding Background}" 
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="LightGray"  />
                            <Setter Property="Background" Value="White"  />
                            <Setter TargetName="PART_ContentHost" Property="Background" Value="Blue"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--PENDING-->
    <Style x:Key ="TextBoxNoBorder_Pending" TargetType="{x:Type TextBox}" BasedOn="{StaticResource BaseTextBoxStyle}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsPending, Mode=TwoWay}" Value="False">
                <Setter Property="Foreground" Value="LightGray" />
                <Setter Property="IsEnabled" Value="False"/>
                <Setter Property="Background" Value="White" />
            </DataTrigger>
            <DataTrigger Binding="{Binding IsOverdue}" Value="True">
                <Setter Property="Foreground" Value="Red" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <!--MATERIALIZATION-->
    <Style x:Key="Material_TextBoxContentError" TargetType="{x:Type TextBox}" BasedOn="{StaticResource BaseTextBoxStyle}">
        <Setter Property="MaxWidth" Value="250"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding ErrorMessageIncludeInMatConcept, Converter={x:Static local:ErrorMessageToBool.Instance}}" Value="True">
                <Setter Property="Foreground" Value="Red" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="Material_TextBoxContentEnabled" TargetType="{x:Type TextBox}" BasedOn="{StaticResource BaseTextBoxStyle}">
        <Setter Property="MaxWidth" Value="250"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding ErrorMessageIncludeInMatConcept, Converter={x:Static local:ErrorMessageToBool.Instance}}" Value="True">
                <Setter Property="Foreground" Value="Red" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <!--REVISIONS-->
    <Style x:Key ="TextBoxNoBorder_Revisions" TargetType="{x:Type TextBox}" BasedOn="{StaticResource BaseTextBoxStyle}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding HasErrors, Mode=TwoWay}" Value="True">
                <Setter Property="Foreground" Value="Red" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>
